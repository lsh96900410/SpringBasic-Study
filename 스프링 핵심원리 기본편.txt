객체 지향 설계 5원칙 SOLID
SRD :  단일 책임 원칙 
OCP : 변경에는 닫혀있고, 확장에는 열려있다.
L
I
D

스프링 빈 등록 : 다른 별칭[ @Bean(name="xxx") ] 없을 시 key [빈 이름 (메소드명)] : value [ 빈 객체 ] 으로 등록 
ApplicationContext : 스프링 컨테이너 라고 생각 모든것(객체 : @Bean)을 관리해줌
클래스 내부에서 static class : 클래스 내부에서만 사용하겠다는 뜻 , 스코프를 결정

싱글톤 패턴 
JVM에 객체가 하나 생성 -> 생성자가 여러번 호출되어도 객체는 한번만 생성되는 디자인 패턴, 가비지컬렉터 불필요한 작동 x 

@Bean 어노테이션만으로도 스프링 빈으로는 등록 but @Configuration 어노테이션을 사용하면 스프링컨테이너에서 알아서 스프링 빈을 싱글톤으로 관리해줌

spring.main.allow-bean-definition-overriding = true : 스프링 부트에서 component 충돌 오류 제거 

private final XXX xxx  == xxx는 무조건 존재해야함
생성자가 하나만 존재한다 :=-> 스프링이 자동으로 의존관계주입 해줌 어노테이션 없이도 
 

생성자 주입을 사용해야하는 이유
<불변 , 누락>

개발자의 코드 작성시 실수를 막아준다. 컴파일에러로 잡을수있음[중요]
필드 값을 private final 로 설정 가능 --> 초기값 설정이 필요하고, 초기값 설정이 끝까지감 
나중에 값 변경 불가,